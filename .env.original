# SmartArb Engine - Environment Variables Template

# Copy this file to .env and fill in your actual values

# NEVER commit .env file with real credentials!

# =============================================================================

# APPLICATION CONFIGURATION

# =============================================================================

ENVIRONMENT=development
DEBUG_MODE=true
LOG_LEVEL=INFO
APP_NAME=SmartArb Engine
APP_VERSION=1.0.0

# Python Configuration

PYTHONUNBUFFERED=1
PYTHONDONTWRITEBYTECODE=1
PYTHONHASHSEED=random

# =============================================================================

# DATABASE CONFIGURATION

# =============================================================================

# PostgreSQL Configuration

POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DATABASE=smartarb_dev
POSTGRES_USERNAME=smartarb_user
POSTGRES_PASSWORD=

# Database Pool Configuration

DB_POOL_MIN_SIZE=5
DB_POOL_MAX_SIZE=20
DB_POOL_TIMEOUT=30

# Redis Configuration

REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=
REDIS_TIMEOUT=5

# =============================================================================

# EXCHANGE API KEYS (Sandbox/Testnet recommended for development)

# =============================================================================

# Kraken Exchange

KRAKEN_API_KEY=
KRAKEN_API_SECRET=
KRAKEN_SANDBOX=false
KRAKEN_RATE_LIMIT=1200

# Bybit Exchange

BYBIT_API_KEY=
BYBIT_API_SECRET=
BYBIT_SANDBOX=false
BYBIT_UNIFIED_ACCOUNT=true
BYBIT_RATE_LIMIT=1000

# MEXC Exchange

MEXC_API_KEY=
MEXC_API_SECRET=
MEXC_SANDBOX=false
MEXC_RATE_LIMIT=1200

# =============================================================================

# AI INTEGRATION (Claude API)

# =============================================================================

# Anthropic Claude API

CLAUDE_API_KEY=
CLAUDE_MODEL=claude-3-sonnet-20240229
CLAUDE_MAX_TOKENS=4000
CLAUDE_TEMPERATURE=0.1

# AI Configuration

ENABLE_AI_ANALYSIS=true
AI_ANALYSIS_INTERVAL=3600  # 1 hour in seconds
AI_EMERGENCY_THRESHOLD=0.95
ENABLE_AUTO_CODE_UPDATES=false  # Set to true only in production

# =============================================================================

# NOTIFICATION SERVICES

# =============================================================================

# Telegram Bot

TELEGRAM_BOT_TOKEN=
TELEGRAM_CHAT_ID=
TELEGRAM_ENABLED=true

# Notification Thresholds
TELEGRAM_MIN_PROFIT_THRESHOLD=25.0	# Notifica solo per profitti > 25$
TELEGRAM_MIN_SPREAD_THRESHOLD=1.0	# Notifica solo per spread > 1%
TELEGRAM_MAX_NOTIFICATIONS_PER_HOUR=15	# Max 15 notifiche all'ora
TELEGRAM_STATUS_REPORT_INTERVAL=1800	# Report status ogni 30 min
TELEGRAM_ERROR_NOTIFICATIONS=true	# Abilita notifiche errori

# Discord Webhook (optional)

DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/your_webhook_here
DISCORD_ENABLE_NOTIFICATIONS=false

# Email Notifications (optional)

SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your_email@gmail.com
SMTP_PASSWORD=your_app_password_here
SMTP_FROM_EMAIL=your_email@gmail.com
SMTP_TO_EMAIL=your_notifications_email@gmail.com
EMAIL_ENABLE_NOTIFICATIONS=false

# =============================================================================

# TRADING CONFIGURATION

# =============================================================================

# Trading Mode (PAPER or LIVE)

TRADING_MODE=PAPER

# Risk Management

MAX_DAILY_LOSS=50.0
MAX_POSITION_SIZE=500.0
MAX_EXPOSURE_PER_EXCHANGE=300.0
STOP_LOSS_PERCENTAGE=2.0
MAX_CORRELATION_EXPOSURE=0.7
EMERGENCY_STOP_LOSS=100.0

# Position Sizing

DEFAULT_POSITION_SIZE=100.0
MIN_POSITION_SIZE=10.0
POSITION_SIZE_PERCENTAGE=0.02  # 2% of balance

# Trading Pairs

ENABLED_PAIRS=BTC/USD,ETH/USD,BNB/USD,ADA/USD,SOL/USD
MIN_VOLUME_24H=1000000  # Minimum 24h volume in USD

# =============================================================================

# STRATEGY CONFIGURATION

# =============================================================================

# Spatial Arbitrage

SPATIAL_ARB_ENABLED=true
SPATIAL_ARB_MIN_PROFIT=0.3  # 0.3% minimum profit
SPATIAL_ARB_MAX_POSITION=200.0
SPATIAL_ARB_TIMEOUT=30  # seconds

# Triangular Arbitrage (future)

TRIANGULAR_ARB_ENABLED=false
TRIANGULAR_ARB_MIN_PROFIT=0.5

# Strategy Timing

STRATEGY_SCAN_INTERVAL=5  # seconds
STRATEGY_EXECUTION_TIMEOUT=30  # seconds
MAX_CONCURRENT_TRADES=3

# =============================================================================

# SECURITY CONFIGURATION

# =============================================================================

# API Security

API_RATE_LIMIT=100  # requests per minute
API_TIMEOUT=30  # seconds
ENABLE_IP_WHITELIST=false
ALLOWED_IPS=127.0.0.1,::1

# Session Security

SESSION_SECRET_KEY=your_very_long_random_secret_key_here
SESSION_TIMEOUT=3600  # 1 hour
ENABLE_2FA=false

# Encryption

ENCRYPTION_KEY=your_32_byte_encryption_key_here
ENABLE_DATA_ENCRYPTION=true

# SSL/TLS

SSL_CERT_FILE=/path/to/ssl/cert.pem
SSL_KEY_FILE=/path/to/ssl/key.pem
FORCE_HTTPS=false

# =============================================================================

# MONITORING & LOGGING

# =============================================================================

# Logging Configuration

LOG_FILE_PATH=logs/smartarb.log
LOG_FILE_MAX_SIZE=50MB
LOG_FILE_BACKUP_COUNT=5
LOG_FORMAT=json

# Metrics & Monitoring

ENABLE_PROMETHEUS_METRICS=true
PROMETHEUS_PORT=9090
METRICS_COLLECTION_INTERVAL=60  # seconds

# Health Checks

HEALTH_CHECK_INTERVAL=30  # seconds
HEALTH_CHECK_TIMEOUT=10  # seconds
ENABLE_EXTERNAL_HEALTH_CHECKS=true

# Performance Monitoring

ENABLE_PROFILING=false
PROFILE_OUTPUT_DIR=profiles/
MAX_MEMORY_USAGE_MB=512  # For Raspberry Pi

# =============================================================================

# RASPBERRY PI SPECIFIC CONFIGURATION

# =============================================================================

# Hardware Optimization

OPTIMIZE_FOR_RPI=true
RPI_CPU_GOVERNOR=performance  # or powersave
RPI_GPU_MEM_SPLIT=64

# Storage Configuration

DATA_DIR=/mnt/external-ssd/smartarb/data
LOG_DIR=/mnt/external-ssd/smartarb/logs
BACKUP_DIR=/mnt/external-ssd/smartarb/backups
ENABLE_EXTERNAL_STORAGE=true

# System Monitoring

MONITOR_CPU_TEMP=true
CPU_TEMP_THRESHOLD=70  # Celsius
MONITOR_DISK_SPACE=true
DISK_SPACE_THRESHOLD=90  # Percentage

# =============================================================================

# BACKUP & RECOVERY

# =============================================================================

# Database Backups

ENABLE_AUTO_BACKUP=true
BACKUP_INTERVAL=86400  # 24 hours in seconds
BACKUP_RETENTION_DAYS=7
BACKUP_COMPRESSION=true

# Configuration Backups

BACKUP_CONFIG_FILES=true
CONFIG_BACKUP_INTERVAL=3600  # 1 hour

# Cloud Backup (optional)

ENABLE_CLOUD_BACKUP=false
AWS_S3_BUCKET=your-smartarb-backups
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
AWS_REGION=us-east-1

# =============================================================================

# DEVELOPMENT & TESTING

# =============================================================================

# Testing Configuration

TESTING=false
TEST_DATABASE_URL=postgresql://test_user:test_pass@localhost:5432/test_smartarb
ENABLE_TEST_MODE=false

# Development Tools

ENABLE_DEBUG_TOOLBAR=false
ENABLE_PROFILER=false
ENABLE_QUERY_LOGGING=false

# Mock Services (for testing)

MOCK_EXCHANGES=false
MOCK_AI_SERVICE=false
MOCK_NOTIFICATIONS=false

# =============================================================================

# DOCKER CONFIGURATION

# =============================================================================

# Docker Compose Override

COMPOSE_PROJECT_NAME=smartarb
COMPOSE_FILE=docker-compose.yml:docker-compose.override.yml

# Container Configuration

CONTAINER_TIMEZONE=UTC
CONTAINER_LOCALE=en_US.UTF-8

# =============================================================================

# ADVANCED CONFIGURATION

# =============================================================================

# Async Configuration

MAX_WORKERS=4
WORKER_TIMEOUT=300
KEEP_ALIVE_TIMEOUT=65

# Queue Configuration

CELERY_BROKER_URL=redis://localhost:6379/1
CELERY_RESULT_BACKEND=redis://localhost:6379/2
CELERY_TASK_SERIALIZER=json
CELERY_RESULT_SERIALIZER=json

# Cache Configuration

CACHE_TYPE=redis
CACHE_TTL=3600  # 1 hour
CACHE_KEY_PREFIX=smartarb:

# =============================================================================

# FEATURE FLAGS

# =============================================================================

# Experimental Features

ENABLE_ADVANCED_ANALYTICS=false
ENABLE_MACHINE_LEARNING=false
ENABLE_SENTIMENT_ANALYSIS=false
ENABLE_NEWS_INTEGRATION=false

# Beta Features

ENABLE_MULTI_EXCHANGE_ORDERS=false
ENABLE_CROSS_CHAIN_ARBITRAGE=false
ENABLE_OPTIONS_TRADING=false

# =============================================================================

# COMPLIANCE & REGULATORY

# =============================================================================

# Compliance Settings

ENABLE_COMPLIANCE_MODE=false
REGULATORY_JURISDICTION=US
MAX_TRADE_SIZE_USD=10000
ENABLE_TRANSACTION_REPORTING=false

# KYC/AML

ENABLE_TRANSACTION_MONITORING=false
SUSPICIOUS_ACTIVITY_THRESHOLD=50000  # USD
COMPLIANCE_REPORT_EMAIL=compliance@example.com

# =============================================================================

# EXTERNAL SERVICES

# =============================================================================

# Price Data Providers

COINMARKETCAP_API_KEY=your_cmc_api_key_here
COINGECKO_API_KEY=your_coingecko_api_key_here
ENABLE_MULTIPLE_PRICE_SOURCES=true

# News & Sentiment

NEWSAPI_KEY=your_news_api_key_here
TWITTER_API_KEY=your_twitter_api_key_here
ENABLE_NEWS_ANALYSIS=false

# =============================================================================

# NOTES

# =============================================================================

# 1. Always use strong passwords and API keys

# 2. Enable 2FA on all exchange accounts

# 3. Use sandbox/testnet APIs for development

# 4. Keep this file secure and never commit real credentials

# 5. Consider using a secrets management service for production

# 6. Regularly rotate API keys and passwords

# 7. Monitor for unauthorized access

# 8. Use IP whitelisting when possible

# 9. Enable all security features in production

# 10. Keep all dependencies updated

# =============================================================================

# PRODUCTION CHECKLIST

# =============================================================================

# Before going to production:

# [ ] Change all default passwords

# [ ] Generate strong encryption keys

# [ ] Enable SSL/TLS

# [ ] Configure proper logging

# [ ] Set up monitoring and alerting

# [ ] Test backup and recovery procedures

# [ ] Enable security features

# [ ] Review and limit API permissions

# [ ] Set up proper firewall rules

# [ ] Document your configuration

# [ ] Plan for disaster recovery
